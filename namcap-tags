# namcap tags file
# The tags file consists of lines specifying the human readable form of the
# hyphenated tags used in the namcap code. A line beginning with a '#' is
# treated as a comment. Otherwise the format of the file is:
#
#	machine-parseable-tag %s :: This is machine parseable tag %s
#
# Note that a double colon (::) is used to separate the hyphenated tag from the
# human readable description.

# rules tags
backups-preceding-slashes :: Backup entries should not have preceding slashes
cross-dir-hardlink %s %s :: Cross-directory hardlink in package (%s, %s)
dangling-hardlink %s points to %s :: Hard link (%s) points to non-existing %s
dangling-symlink %s points to %s :: Symlink (%s) points to non-existing %s
dbus-1-location %s :: File %s should be in /usr/share/dbus-1/system.d/
directory-not-world-executable %s :: Directory (%s) does not have the world executable bit set.
elffile-in-any-package %s :: ELF file ('%s') found in an 'any' package.
elffile-in-questionable-dirs %s :: ELF files outside of a valid path ('%s').
elffile-nopie %s :: ELF file ('%s') lacks PIE.
elffile-noshstk %s :: ELF file ('%s') lacks GNU_PROPERTY_X86_FEATURE_1_SHSTK, check CFLAGS/CXXFLAGS.
elffile-not-in-allowed-dirs %s :: ELF file ('%s') outside of a valid path.
elffile-unstripped %s :: ELF file ('%s') is unstripped.
elffile-with-execstack %s :: ELF file ('%s') has executable stack.
elffile-with-textrel %s :: ELF file ('%s') has text relocations.
elffile-without-relro %s :: ELF file ('%s') lacks FULL RELRO, check LDFLAGS.
empty-directory %s :: Directory (%s) is empty
error-running-rule %s :: Error running rule '%s'
external-hooks %s :: .INSTALL file runs a command (%s) provided by hooks.
external-hooks-unneeded %s :: unneeded dependency on a package (%s) run when needed by hooks.
extra-var-begins-without-underscore %s :: Non standard variable '%s' doesn't start with an underscore
file-in-non-standard-dir %s :: File (%s) exists in a non-standard directory.
file-in-temporary-dir %s :: File (%s) is in a temporary directory.
file-not-world-readable %s :: File (%s) does not have the world readable bit set.
file-referred-in-startdir :: File referenced in $startdir
file-setugid %s :: File (%s) is setuid or setgid.
file-world-writable %s :: File (%s) has the world writable bit set.
gnome-mime-file %s :: File (%s) is an auto-generated GNOME mime file
hardlink-found %s points to %s :: Hard link (%s) found that points to %s
improper-checksum %s %s :: Improper %s: '%s'
incorrect-library-permissions %s :: Library (%s) does not have permission set to 644 or 444
incorrect-owner %s (%s:%s) :: File (%s) is owned by %s:%s
info-dir-file-present %s :: Info directory file (%s) should not be present
insecure-rpath %s %s :: Insecure RPATH '%s' in file ('%s')
insecure-runpath %s %s :: Insecure RUNPATH '%s' in file ('%s')
invalid-filename :: File name %s contains non standard characters
libdepends-by-namcap-sight depends=(%s) :: Soname depends as namcap sees them: depends=(%s)
libdepends-detected-but-optional %s %s (%s) :: Soname dependency '%s' provided by %s detected but optional (needed in files %s)
libdepends-detected-not-included %s %s (%s) :: Soname dependency '%s' provided by %s detected and not included (needed in files %s)
libdepends-detected-satisfied %s %s (%s) :: Soname dependency '%s' provided by %s is satisfied (needed in files %s)
libdepends-missing-provides %s %s (%s) :: Soname '%s' is not specified as provides by %s yet (needed in files %s)
libdepends-not-needed %s :: Soname dependency included, but may not be needed ('%s')
libdepends-without-version %s :: Soname dependency %s specified without version number
libprovides-by-namcap-sight provides=(%s) :: Provides as namcap sees them: provides=(%s)
libprovides-missing %s :: Specified library '%s' is not found in public libdirs of package
libprovides-satisfied %s %s :: Provided library '%s' is specified (provided by file %s)
libprovides-unsatisfied %s %s :: Provided library '%s' is not specified (provided by file %s)
libprovides-without-version %s :: Provided library %s specified without version number
library-no-package-associated %s %s :: Referenced library '%s' is an uninstalled dependency (needed in files %s)
libtool-file-present %s :: File (%s) is a libtool file
link-level-dependence %s in %s :: Link-level dependence (%s) in file %s
lots-of-docs %f :: Package was %.0f%% docs by size; maybe you should split out a docs package
makepkg-function-used %s :: PKGBUILD uses internal makepkg '%s' subroutine
missing-backup-file %s :: File in backup array (%s) not found in package
missing-checksums :: Missing checksums
missing-contributor :: Missing Contributor tag
missing-description :: Missing description in PKGBUILD
missing-description %s :: Missing description in split package '%s' in PKGBUILD
missing-maintainer :: Missing Maintainer tag
missing-makedeps %s :: Split PKGBUILD needs additional makedepends %s to work properly
missing-pkgfunction %s :: Child package %s does not have a valid package() function
missing-url :: Missing url
missing-vcs-makedeps %s :: VCS source PKGBUILD needs additional makedepends '%s' to work properly
no-elffiles-not-any-package :: No ELF files and not an "any" package
non-fhs-info-page %s :: Non-FHS info page (%s) found. Use /usr/share/info instead
non-fhs-man-page %s :: Non-FHS man page (%s) found. Use /usr/share/man instead
non-unique-source-name %s :: Non-unique source name (%s). Use a unique filename.
not-enough-checksums %s %i needed :: Not enough %s: %i needed
package-name-in-uppercase :: No upper case letters in package names
perllocal-pod-present %s :: perllocal.pod found in %s.
pkgconf-dependence %s in %s :: pkg-config dependence (%s) in file %s
pkgconf-no-package-associated %s %s :: Referenced pkg-config file '%s' is an uninstalled dependency (needed in files %s)
pkgname-in-description :: Description should not contain the package name.
potential-non-fhs-info-page %s :: Potential non-FHS info page (%s) found.
potential-non-fhs-man-page %s :: Potential non-FHS man page (%s) found.
py-mtime-file-name %s :: Python script (%s) is newer than associated .pyc/pyo.
py-mtime-mtree-warning :: Found .py file unnoticeably newer than associated .pyc/pyo.
py-mtime-tar-error :: Found .py file newer than associated .pyc/pyo.
python-module-dependence %s in %s :: Python dependence (%s) on module %s
python-module-no-package-associated %s %s :: Referenced python module '%s' is an uninstalled dependency (needed in files %s)
qml-module-dependence %s in %s :: QML dependency (%s) on module %s
qml-module-no-package-associated %s %s :: Referenced QML module '%s' is an uninstalled dependency (needed in files %s)
redundant-makedep %s :: Make dependency (%s) already included as dependency
script-link-detected %s in %s :: Script link detected (%s) in file %s
scrollkeeper-dir-exists %s :: Scrollkeeper directory exists (%s). Remember to not run scrollkeeper till post_{install,upgrade,remove}.
site-ruby :: Found usr/lib/ruby/site_ruby in package, usr/lib/ruby/vendor_ruby should be used instead.
specific-host-type-used %s :: Reference to %s should be changed to $CARCH
specific-sourceforge-mirror :: Attempting to use specific sourceforge mirror, use downloads.sourceforge.net instead
sphinx-build-cache-files :: unreproducible sphinx cache files found, run 'sphinx-build' with '-d /tmp' to prevent these files ending up in packaging
symlink-found %s points to %s :: Symlink (%s) found that points to %s
systemd-location %s :: File %s should be in /usr/lib/systemd/system/
too-many-checksums %s %i needed :: Too many %s: %i needed
unused-sodepend %s %s :: Unused shared library '%s' by file ('%s')
use-pkgdir :: Use $pkgdir instead of $startdir/pkg
use-srcdir :: Use $srcdir instead of $startdir/src
using-dl-sourceforge :: Attempting to use dl sourceforge domain, use downloads.sourceforge.net instead
variable-not-array %s :: Variable %s is not an array.

# license
## errors
missing-license :: Missing license
invalid-license-string %s :: %s is an invalid license string.
unknown-spdx-license-identifier %s :: %s is not a valid SPDX license identifier. See https://spdx.org/licenses/ for valid identifiers, or prefix the identifier with 'LicenseRef-', if it is custom.
license-statement-formatting %s %s :: The SPDX license statement '%s' should be formatted as '%s' instead
license-file-missing %s %s %s :: Uncommon license identifiers such as '%s' require license files below /usr/share/licenses/%s/ or switching to common license identifiers. Found %s required license files.
license-file-missing-in-other-pkg %s :: Symlink to license file '%s' points to an external package, but either the file is missing or the package is not a dependency
license-dir-target-pkg-not-in-depends %s %s %s :: The license dir is symlinked to a directory in the '%s' package, but it is not a dependency. Uncommon license identifiers such as '%s' require license files. Found %s
license-dir-is-symlink-and-license-files-missing %s %s %s :: Custom license identifier such as '%s' require license files, but the license dir is a symlink to '%s' and license files are missing. Found %s

## warnings
license-file-in-external-pkg %s :: Symlinks to license files in other packages should be replaced by the actual license files: %s
license-dir-in-external-pkg %s :: Symlink to a license dir in other packages should be replaced by the actual license files: %s

# dependency tags
dependency-covered-by-link-dependence %s :: Dependency covered by dependencies from link dependence (%s)
dependency-detected-but-optional %s (%s) :: Dependency %s detected but optional (%s)
dependency-detected-not-included %s (%s) :: Dependency %s detected and not included (%s)
dependency-detected-satisfied %s (%s) :: Dependency %s detected and satisfied (%s)
dependency-duplicated-optdepend %s :: Dependency %s specified in both depends and optdepends
dependency-implicitly-satisfied %s (%s) :: Dependency %s detected and implicitly satisfied (%s)
dependency-implicitly-satisfied-optional %s (%s) :: Dependency %s detected and implicitly satisfied but optional (%s)
dependency-is-testing-release %s :: Dependency '%s' on your system is a testing release
dependency-not-needed %s :: Dependency included, but may not be needed ('%s')
dependency-satisfied-optdepend %s :: Dependency %s specified in optdepends but implicitly satisfied by depends
depends-by-namcap-sight depends=(%s) :: Depends as namcap sees them: depends=(%s)

# dependency reasons
dconf-needed-for-glib-schemas :: needed for glib schemas
glib2-needed-for-gio-modules :: needed for GIO modules
hicolor-icon-theme-needed-for-hicolor-dir :: needed for hicolor theme hierarchy
java-runtime-needed %s :: found class files %s
libraries-needed %s %s :: libraries %s needed in files %s
pkgconf-needed %s %s :: pkg-config files %s needed in files %s
programs-needed %s %s :: programs %s needed in scripts %s
python-modules-needed %s %s :: python modules %s needed in files %s
qml-modules-needed %s %s :: QML modules %s needed in files %s
